#include <iostream>

using namespace std;

double lenBetweenTwoPoints(pair<double, double> p1, pair<double, double> p2) {
    return sqrt(pow((p1.first - p2.first), 2) + pow((p1.second - p2.second), 2));
}

bool checkKvadrat(pair<double, double> p1, pair<double, double> p2, pair<double, double> p3) {
    auto p1p2 = make_pair(p2.first - p1.first, p2.second - p1.second);
    auto p1p3 = make_pair(p3.first - p1.first, p3.second - p1.second);
    return p1p2.first * p1p3.first + p1p2.second * p1p3.second == 0
        && lenBetweenTwoPoints(p1, p2) == lenBetweenTwoPoints(p1, p3);
}

int main()
{
    double x1, y1, x2, y2, x3, y3;
    cin >> x1 >> y1 >> x2 >> y2 >> x3>> y3;
    pair<double, double> p1, p2, p3;
    p1 = make_pair(x1, y1);
    p2 = make_pair(x2, y2);
    p3 = make_pair(x3, y3);
    if (checkKvadrat(p1, p2, p3) ) {
        cout << "true" << " " << p2.first + p3.first - p1.first << " " << p2.second + p3.second - p1.second;
    }
    else if (checkKvadrat(p2, p1, p3)) {
        cout << "true" << " " << p1.first + p3.first - p2.first << " " << p1.second + p3.second - p2.second;;
    }
    else if (checkKvadrat(p3, p1, p2)) {
        cout << "true" << " " << p1.first + p2.first - p3.first << " " << p1.second + p2.second - p3.second;
    }
    else {
        cout << "false";
    }
}
